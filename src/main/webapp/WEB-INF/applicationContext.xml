<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       xmlns:c="http://www.springframework.org/schema/c">

    <!-- context:component-scan This tag will scan @Component, @Repository, @Service, @Controller
        and also resolves @Autowired and @Qualifier -->
    <context:component-scan base-package="com.work" />

    <!--
        mvc:annotation-driven configures Spring MVC annotations
        Support for validating @Controller inputs with @Valid, if a JSR-303 Provider is present on the classpath.
        HttpMessageConverter support for @RequestBody method parameters and @ResponseBody method return values
        from @RequestMapping or @ExceptionHandler methods.
     -->
    <mvc:annotation-driven/>



    <!-- Static Resources Configuration (get access to static sources such as CSS and JavaScript files) -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!-- themes can be put in different folder such as
        <mvc:resources mapping="/resources/**" location="/resources/themeBlue" />
        <mvc:resources mapping="/resources/**" location="/resources/themeGreen" />
     -->

    <bean id="userRealizationDao"
          class="com.work.dao.UsersRealizationDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="hibernateSessionFactoryUtil"
          class="com.work.configuration.HibernateSessionFactoryUtil">

    </bean>

    <bean id="sessionFactory" factory-bean="hibernateSessionFactoryUtil" factory-method="getSessionFactory"/>

    <bean id="usersEntity" class="com.work.usersEntity.UsersEntity">

    </bean>


</beans >